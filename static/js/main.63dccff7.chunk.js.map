{"version":3,"sources":["Components/imageGalleryList/imageGalleryItem/ImageGalleryItem.js","Components/imageGalleryList/ImageGalleryList.js","Components/modal/Modal.js","Components/searchbar/Searchbar.js","Components/ImageGallery.js","App.js","index.js"],"names":["ImageGalleryItem","image","largeImgHendler","id","className","onClick","data-source","largeImageURL","src","webformatURL","alt","type","ImageGalleryList","images","map","modalRoot","document","getElementById","Modal","handleClose","e","code","props","onClose","currentTarget","target","window","addEventListener","this","removeEventListener","console","log","largeImg","createPortal","open","Component","Searchbar","state","searchQuery","onHeandlerSubmit","preventDefault","onSubmit","onHeandlerChange","name","value","setState","onChange","placeholder","KEY","ImageGallery","page","query","shoModal","loader","error","axiosImage","a","axios","get","data","prevState","hits","scrollTo","top","documentElement","scrollHeight","behavior","onFormSubmit","showMore","largeImage","dataset","source","openCloseModal","prevSt","prevProps","length","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.63dccff7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({ image, largeImgHendler }) => {\r\n  return (\r\n    <>\r\n      <li id={image.id} className=\"ImageGalleryItem\">\r\n        <img\r\n          onClick={largeImgHendler}\r\n          data-source={image.largeImageURL}\r\n          src={image.webformatURL}\r\n          alt={image.type}\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGalleryList = ({ images, largeImgHendler }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">\r\n        {images?.map((image) => (\r\n          <ImageGalleryItem\r\n            image={image}\r\n            key={image.id}\r\n            largeImgHendler={largeImgHendler}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryList;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleClose);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleClose);\r\n  }\r\n\r\n  handleClose = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.largeImg);\r\n    return createPortal(\r\n      this.props.open ? (\r\n        <div className=\"Overlay\" onClick={this.handleClose}>\r\n          <div className=\"Modal\">\r\n            <img src={this.props.largeImg} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      ) : null,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  onHeandlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.searchQuery);\r\n  };\r\n\r\n  onHeandlerChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.onHeandlerSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.onHeandlerChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            placeholder=\"Search images and photos\"\r\n            name=\"searchQuery\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport ImageGalleryList from \"./imageGalleryList/ImageGalleryList\";\r\nimport Modal from \"./modal/Modal\";\r\nimport Searchbar from \"./searchbar/Searchbar\";\r\n\r\nconst KEY = \"21148733-fe4ceb41e783008baa1bd0520\";\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    largeImageURL: \"\",\r\n    page: 1,\r\n    query: \"\",\r\n    shoModal: false,\r\n    loader: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.query !== prevState.query && this.state.query !== \"\") {\r\n      this.axiosImage();\r\n    } else if (\r\n      this.state.query === prevState.query &&\r\n      this.state.page !== prevState.page\r\n    ) {\r\n      this.axiosImage();\r\n    }\r\n  }\r\n\r\n  axiosImage = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `https://pixabay.com/api/?q=${this.state.query}&page=${this.state.page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n      );\r\n      this.setState((prevState) => ({\r\n        images: [...prevState.images, ...data.hits],\r\n      }));\r\n    } catch (error) {\r\n    } finally {\r\n      this.setState((prevState) => ({\r\n        loader: false,\r\n      }));\r\n\r\n      if (this.state.page > 1) {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onFormSubmit = (query) => {\r\n    this.setState({ query: \"\", page: 1, images: [] });\r\n    this.setState({ query: query, page: 1, images: [] });\r\n  };\r\n\r\n  showMore = () => {\r\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\r\n  };\r\n\r\n  largeImgHendler = (e) => {\r\n    const largeImage = e.target.dataset.source;\r\n    this.setState({ largeImageURL: largeImage });\r\n    this.openCloseModal();\r\n  };\r\n  openCloseModal = () => {\r\n    this.setState((prevSt) => ({ shoModal: !prevSt.shoModal }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.onFormSubmit} />\r\n\r\n        {this.state.loader ? (\r\n          <Loader />\r\n        ) : (\r\n          <ImageGalleryList\r\n            images={this.state.images}\r\n            largeImgHendler={this.largeImgHendler}\r\n          />\r\n        )}\r\n        {this.state.images.length > 0 && (\r\n          <button className=\"Button\" type=\"button\" onClick={this.showMore}>\r\n            Load more\r\n          </button>\r\n        )}\r\n\r\n        <Modal\r\n          open={this.state.shoModal}\r\n          onClose={this.openCloseModal}\r\n          largeImg={this.state.largeImageURL}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import ImageGallery from \"./Components/ImageGallery\";\n\nfunction App() {\n  return <ImageGallery />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}